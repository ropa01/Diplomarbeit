%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 408.000000 154.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.7.3 (Build 11D50b) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 408 154
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 408 154
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 408 154 rc
-62.5 195.5 m
496.5 195.5 l
496.5 -587.5 l
-62.5 -587.5 l
h
-62.5 195.5 m
f
251 101 m
153 101 l
141.408 101.00001 132 110.408 132 122.00001 c
132 133.59201 141.408 143 153 143 c
251 143 l
262.59201 143 272 133.592 272 121.99999 c
272 110.408 262.59201 100.99999 251 101 c
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -62 195 cm
313 94 m
215 94 l
203.408 93.999992 194 84.591995 194 72.999992 c
194 61.40799 203.408 52 215 52 c
313 52 l
324.59201 52 334 61.408005 334 73.000008 c
334 84.592003 324.59201 94.000008 313 94 c
S
1 1 1 sc
CM
251 11.782608 m
153 11.782608 l
141.408 11.782608 132 21.190613 132 32.782608 c
132 44.374619 141.408 53.782608 153 53.782608 c
251 53.782608 l
262.59201 53.782608 272 44.374603 272 32.782608 c
272 21.190598 262.59201 11.782608 251 11.782608 c
f
0 0 0 sc
1 0 0 -1 -62 195 cm
313 183.21739 m
215 183.21739 l
203.408 183.21739 194 173.80939 194 162.21739 c
194 150.62538 203.408 141.21739 215 141.21739 c
313 141.21739 l
324.59201 141.21739 334 150.6254 334 162.21739 c
334 173.8094 324.59201 183.21739 313 183.21739 c
S
108.90849 118.9502 m
108.90849 162.7451 l
127.59991 162.30928 l
129.59991 162.30928 l
S
CM
71.599915 32.69072 m
67.599915 34.19072 l
67.599915 31.19072 l
h
71.599915 32.69072 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
133.59991 162.30928 m
129.59991 160.80928 l
129.59991 163.80928 l
h
133.59991 162.30928 m
S
1 1 1 sc
CM
73.999847 38.282623 m
84.214142 32.782623 l
73.999847 27.282623 l
h
73.999847 38.282623 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -62 195 cm
135.99985 156.71738 m
146.21414 162.21738 l
135.99985 167.71738 l
h
135.99985 156.71738 m
S
1 1 1 sc
CM
94.428467 27.282623 m
84.214172 32.782623 l
94.428467 38.282623 l
h
94.428467 27.282623 m
f
0 0 0 sc
1 0 0 -1 -62 195 cm
156.42847 167.71738 m
146.21417 162.21738 l
156.42847 156.71738 l
h
156.42847 167.71738 m
S
108.90849 118.9502 m
108.90849 111.0502 l
108.90849 73.202614 l
113.48367 73.202614 l
127.59986 73.04113 l
129.59985 73.04113 l
S
CM
71.599869 121.95887 m
67.599869 123.45887 l
67.599869 120.45887 l
h
71.599869 121.95887 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
133.59987 73.04113 m
129.59987 71.54113 l
129.59987 74.54113 l
h
133.59987 73.04113 m
S
1 1 1 sc
CM
73.999847 127.5 m
84.214142 122 l
73.999847 116.5 l
h
73.999847 127.5 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -62 195 cm
135.99985 67.5 m
146.21414 73 l
135.99985 78.5 l
h
135.99985 67.5 m
S
1 1 1 sc
CM
94.428467 116.5 m
84.214172 122 l
94.428467 127.5 l
h
94.428467 116.5 m
f
0 0 0 sc
1 0 0 -1 -62 195 cm
156.42847 78.5 m
146.21417 73 l
156.42847 67.5 l
h
156.42847 78.5 m
S
156.92847 162.21738 m
164.82846 162.21738 l
185.60001 162.21738 l
187.60001 162.21738 l
S
CM
129.60001 32.782623 m
125.60001 34.282623 l
125.60001 31.282623 l
h
129.60001 32.782623 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
191.60001 162.21738 m
187.60001 160.71738 l
187.60001 163.71738 l
h
191.60001 162.21738 m
S
1 J
1 j
156.92847 73 m
164.82846 73 l
185.60001 73 l
187.60001 73 l
S
CM
129.60001 122 m
125.60001 123.5 l
125.60001 120.5 l
h
129.60001 122 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
191.60001 73 m
187.60001 71.5 l
187.60001 74.5 l
h
191.60001 73 m
S
1 1 1 sc
CM
113.63031 106.76469 m
108.13031 96.550415 l
102.63031 106.76469 l
h
113.63031 106.76469 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -62 195 cm
175.63031 88.235306 m
170.13031 98.449585 l
164.63031 88.235306 l
h
175.63031 88.235306 m
S
1 1 1 sc
CM
102.63031 86.33609 m
108.13031 96.550369 l
113.63031 86.33609 l
h
102.63031 86.33609 m
f
0 0 0 sc
1 0 0 -1 -62 195 cm
164.63031 108.66391 m
170.13031 98.449631 l
175.63031 108.66391 l
h
164.63031 108.66391 m
S
169.91878 73 m
169.91878 80 l
170.07201 80.735336 l
170.07201 87.735336 l
S
170.11009 109.16391 m
170.11009 116.16391 l
169.9187 155.21738 l
169.9187 162.21738 l
S
334.5 162.21738 m
342.39999 162.21738 l
369.92883 162.21738 l
371.92883 162.21738 l
S
CM
313.92883 32.782623 m
309.92883 34.282623 l
309.92883 31.282623 l
h
313.92883 32.782623 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
375.92883 162.21738 m
371.92883 160.71738 l
371.92883 163.71738 l
h
375.92883 162.21738 m
S
1 1 1 sc
CM
316.32886 38.282623 m
326.54315 32.782623 l
316.32886 27.282623 l
h
316.32886 38.282623 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -62 195 cm
378.32886 156.71738 m
388.54315 162.21738 l
378.32886 167.71738 l
h
378.32886 156.71738 m
S
1 1 1 sc
CM
336.75751 27.282623 m
326.54321 32.782623 l
336.75751 38.282623 l
h
336.75751 27.282623 m
f
0 0 0 sc
1 0 0 -1 -62 195 cm
398.75751 167.71738 m
388.54321 162.21738 l
398.75751 156.71738 l
h
398.75751 167.71738 m
S
334.49994 73 m
369.9288 73 l
371.9288 73 l
S
CM
313.9288 122 m
309.9288 123.5 l
309.9288 120.5 l
h
313.9288 122 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
375.9288 73 m
371.9288 71.5 l
371.9288 74.5 l
h
375.9288 73 m
S
1 1 1 sc
CM
316.3288 127.5 m
326.54309 122 l
316.3288 116.5 l
h
316.3288 127.5 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -62 195 cm
378.3288 67.5 m
388.54309 73 l
378.3288 78.5 l
h
378.3288 67.5 m
S
1 1 1 sc
CM
336.75745 116.5 m
326.54315 122 l
336.75745 127.5 l
h
336.75745 116.5 m
f
0 0 0 sc
1 0 0 -1 -62 195 cm
398.75745 78.5 m
388.54315 73 l
398.75745 67.5 l
h
398.75745 78.5 m
S
1 1 1 sc
CM
304.23981 85.764107 m
298.73981 75.549828 l
293.23981 85.764114 l
h
304.23981 85.764107 m
f
0 0 0 sc
1 0 0 -1 -62 195 cm
366.23981 109.23589 m
360.73981 119.45017 l
355.23981 109.23589 l
h
366.23981 109.23589 m
S
1 1 1 sc
CM
293.23981 65.335495 m
298.73981 75.549774 l
304.23981 65.335495 l
h
293.23981 65.335495 m
f
0 0 0 sc
1 0 0 -1 -62 195 cm
355.23981 129.66451 m
360.73981 119.45023 l
366.23981 129.66451 l
h
355.23981 129.66451 m
S
360.77881 72.800735 m
360.74506 101.73589 l
360.74506 108.73589 l
S
360.74564 130.16451 m
360.74564 137.16451 l
360.77875 162.01807 l
S
399.25745 73.040138 m
406.25745 73.040138 l
423.58734 73.214294 l
423.58734 141.21739 l
S
398.75745 162.50002 m
423.58734 162.50002 l
423.58734 148.21739 l
423.58734 141.21739 l
S
423.58734 119.04762 m
431.48734 119.04762 l
452.21115 119.04762 l
S
CM
394.21115 75.952377 m
390.21115 77.452377 l
390.21115 74.452377 l
h
394.21115 75.952377 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
456.21115 119.04762 m
452.21115 117.54762 l
452.21115 120.54762 l
h
456.21115 119.04762 m
S
1 J
1 j
170.58824 118.9502 m
199.21201 118.9502 l
S
CM
141.21202 76.049797 m
137.21202 77.549797 l
137.21202 74.549797 l
h
141.21202 76.049797 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
203.21202 118.9502 m
199.21202 117.4502 l
199.21202 120.4502 l
h
203.21202 118.9502 m
S
1 1 1 sc
CM
113.63031 64.763489 m
108.13031 54.549194 l
102.63031 64.763489 l
h
113.63031 64.763489 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -62 195 cm
175.63031 130.23651 m
170.13031 140.45081 l
164.63031 130.23651 l
h
175.63031 130.23651 m
S
1 1 1 sc
CM
102.63031 44.334869 m
108.13031 54.549164 l
113.63031 44.334869 l
h
102.63031 44.334869 m
f
0 0 0 sc
1 0 0 -1 -62 195 cm
164.63031 150.66513 m
170.13031 140.45084 l
175.63031 150.66513 l
h
164.63031 150.66513 m
S
73.895866 118.9502 m
102.51964 118.9502 l
S
CM
44.519638 76.049797 m
40.519638 77.549797 l
40.519638 74.549797 l
h
44.519638 76.049797 m
f
0 J
0 j
1 0 0 -1 -62 195 cm
106.51964 118.9502 m
102.51964 117.4502 l
102.51964 120.4502 l
h
106.51964 118.9502 m
S
ep
end
%%Trailer
%%EOF
