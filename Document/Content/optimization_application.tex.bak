The simulation of chemical processes supplies valuable insight into the intricacies of a given system.
To some extend it is also possible to improve given designs by manual alterations and simulation
steps in a form of trial an error procedure. However the results of an approach like that are unlikely
to yield even locally optimal results in an acceptable amount of time. Hence optimization approaches
are employed to attain improved designs.

The models presented in the previous chapters are capable of projecting various continuous and
discrete design decisions. However when synthesizing a process flowsheet, one must take careful
consideration as to the optimization objectives. The most obvious objective would be of
pure monetary nature, where a process is designed to meet a given set of specifications
at minimum cost. An optimization like that can be carried out at steady state. However for
a steady state model it is never ensured, that this steady state can actually be reached
by the process. Furthermore is there no consideration if the desired steady state can be kept for
changing conditions outside the control of the process operator.

In the case that load changes or different operation modes are required, it becomes questionable,
if steady state optimization remains feasible, or if a dynamic approach becomes necessary.

In this chapter different optimization studies will be given. For once different solution approaches
will be applied to the MINLP arising from a steady state simulation. For once the outer approximation
algorithm as implemented in \gproms, and secondly the continuous reformulation strategy as described
in \Secref{sec:opt:theory:continuous}.

The process under consideration is a generic cryogenic air separation process. As a starting point for the
optimization a base case was manually constructed which met certain somewhat arbitrarily chosen,
but reasonable constraints.

    \subsection{Example process}
    \begin{figure}
        \footnotesize
        \center
        \includegraphics[width=\linewidth]{Pictures/ASU_superstructure}
        \caption{Optimization example process.}
        \label{fig:opt:exppro}
    \end{figure}

    The developed model were combined to a process flowsheet for the cryogenic air separation process.
    As no specific process was being evaluated, the process configuration was modeled after an
    published example process flowsheet \todo{add citation Coco casebook.}. \Figref{fig:opt:exppro}
    shows the flowsheet considered henceforth. Air is drawn from the surrounding at ambient conditions
    and compressed with inter-cooling stages. Afterwards the entering process stream exchange heat
    with the product streams.

    The stream is then divided into two separate streams, and compressed in a turbine, and fed to
    a low pressure column (LPC) while the majority is fed to the high pressure column (HPC).
    Condenser and reboiler are combined in a single unit. A side column to the LPC generates pure
    argon. The condensate form the HPC is partially fed into the LPC. The oxygen rich sump product form the HPC
    is used to condensate the CAC top product, and afterwards fed into the LPC. From the reboiler side liquid oxygen
    is recovered from the process. From the top of LPC and HPC gaseous nitrogen is drawn.

    \subsection{Degrees of freedom}
    \todo{move to description of dynamic model.}
    In order to gain more insight into the behaviour of the dynamic models presented above an analysis
    of the degrees of freedom within the model is at hand. For the degrees of freedom the cost correlations
    will be disregarded, as they for a closed system of equations given the inputs generated form the column
    model. Furthermore interdependencies can be disregarded, as the cost model consist only of ''forward''
    computations. In practical terms this statement can be confirmed since the models can be evaluated
    with and without costing equations. Hence only the stage and hydraulic equations will be considered.

    For a given column without condenser or reboiler the model is made up of $[n_S (5n_C + 24) + n_F]$
    differential algebraic equations in $[n_S (5n_C + 29) + n_F (n_S + n_C + 3) + 1]$ variables. In this
    isolated case all feed flow rates, their composition and enthalpies would be specified. In this case
    the feeds include a hypothetical condenser reflux (the upper most feed) as well as reboiler reflux
    (lowest feed). Along with the feeds and their qualities, the feed splits and reflux split have to be
    assigned. Lastly the column diameter needs to be known. This yields $[n_F (n_S + n_C + 2) + n_S + 1]$
    specifications. To close the system initial conditions for all states have to be given. There
    are a total of $[4 n_S ]$ dynamic states in a column section.

    The condenser reboiler unit is made up of a total condenser and a reboiler side. For the condenser side 
    holdups are neglected. While the reboiler side is modeled much like a column stage. The complete model 
    consists of $[14 + 6 n_C]$ equations in $[17 + 6 n_C]$ variables. The three specified variables would 
    commonly correspond to the condenser pressure, reboiler volume and reflux ratio on the condenser side.
    While other specifications are conceivable, they cannot be made entirely arbitrarily. A specification 
    on the reboiler pressure for instance would result in a high index problem ($\approx n_S^{LPC}$) which 
    could not be solved without drastically reformulating the model.

    \subsection{Steady-state optimization}
    In a first step optimizations were carried out using the steady-state process model. While an effort
    has been made to create a realistic scenario, the main focus of this section is to demonstrate
    optimization capabilities within the model environment \gproms and to compare different solution
    approaches for complex discrete-continuous problems.

    \subsubsection{Single steady-state operation}
    In a first case operations for two separate steady-states were optimized. However only structural
    decisions on the columns were made along with the columns operational parameters.
    %
    \begin{table}
        \center
        \footnotesize
        \input{Tables/SS1_results}
        \caption{steady-state single period optimization results.}
        \label{tab:ss1_results}
    \end{table}
    %
    \Tabref{tab:ss1_results} shows a list of all optimization variables along with their initial and optimized values
    for both steady-states. The optimized values are attained by solving the MINLP by outer approximation or as NCP-problem.

    The objective function considers only capital cost for the separation system
    \Eq{eq:opt:ss_single_objective}{
        CAPEX = \left( \sum_c C_c^{\text{cap}} \right) \cdot \left(q^{-a} \frac{q^a - 1}{q - 1} \right)
            \eqannote{c = \left\{ \text{HPC}, \text{LPC}, \text{CAC}\right\} }
    }
    %
    The difference in the operation modes lies on the requirements on product flow rates and purity. The following
    constraints were enforced
    \begin{table}
        \center
        \footnotesize
        \input{Tables/SS1_constraints}
        \caption{steady-state single period optimization results.}
        \label{tab:ss1_results}
    \end{table}
    When solving the continuous reformulation of the problem, an extra constraint for each integer variable in form of the
    relaxed Fischer-Burmeister function was added. Furthermore the closure condition for each location decision was added as
    an equality constraint. This closure condition needs not to be explicitly considered using the outer approximation approach,
    since this is handled internally by declaring so called special ordered sets. This allows \gproms and the OA algorithm
    to exploit the special structure of the problem due to the \emph{exclusive or} decisions.

    In the process of solving the FB-program \todo{introduce FB-program as term} some difficulties arose. While
    (almost) integer values were found for most structural decisions, even after the initial iteration, especially
    the LPC column displayed some convergence problems. As the relaxation factor is reduced, the solutions are pushed
    towards integer values or in other words, the feasible region between zero and one is is divided into two regions
    which become smaller and smaller. In some cases the discrete solutions remain on one side of the feasible domain,
    while still fulfilling the closure constraint. As the relaxation factor is reduced, the solver is no longer able to
    ''make the jump'' to the other side of the domain. This leads to small values for the integer decisions along most
    of the column. \Figref{fig:conv_fail} shows an typical example of this for of convergence. After the initial NLP the
    feed is evenly distributed between two stages, neither really dominant. As the relaxation is tightened, the values
    are reduced, and distributed among more stages. As the relaxation factor approaches zero the closure condition can
    no longer be satisfied, which in turn prevents convergence of the solver.
    \begin{figure}
        \scriptsize
        \center
        \input{GNUPlot/FB_converge}
        \caption{convergence failure.}
        \label{fig:conv_fail}
    \end{figure}

    This issue has been addressed, by \cite{Kraemer.2010} who propose a re-initialization strategy based on the magnitude of
    the Lagrange multipliers associated with the continuous variables. While the results using this adjusted strategy
    are very promising it could not be implemented within the scope of this thesis. In addition to the adjusted algorithm,
    the problem formulation can be altered to improve convergence of the solution algorithm. Two strategies can
    be employed, which exploit the structure of the distillation model, or force the continuous solution to both sides
    of the feasible domain \cite{Kraemer.2009}.

    The first strategy involves reformulation of purity constraints in terms of the reflux split
    \Eq{}{
        \sum_j \zeta_j^R x_j \leq x_{\text{spec}}.
    }
    As one will always observe a concentration gradient in a finite distillation column, this formulation favours
    integer solutions as it competes with a lower capital costs which distributes fractions on lower trays. Hence
    this strategy is assumed to be most successful for steep concentration gradients at either of the column.
    It should be considered, that this formulation requires the variable tray location to be on the side at which
    the specified purity lies. \todo{write about optimization model.}

    The second approach relies on the previously introduced differentiable distribution function. Here a sufficient
    focus on a given tray can be enforced by adjusting the underlying standard deviation. By introducing that function
    in the first optimization stage, while continuing with the traditional formulation in the subsequent steps,
    convergence could be achieved.

    \todo{discuss time consumption and quality of the solution.}

    \subsubsection{Dual steady-state operation}
    For a second test case it was assumed, that the plant would have to operate under two distinct
    operation modes. One requiring a very high nitrogen purity and the other focusing on very pure oxygen.
    The steady states correspond to the ones from the previous section. To simultaneously consider two steady
    states, two instances were were considered, that were allowed to differ in terms of operational decisions,
    but fixed for structural decisions. The structural decisions are all stream locations and diameters.
    The decision variables correspond to the ones from the previous sections.

    This problem could only be converged using the reformulation strategy. The outer approximation algorithm
    did not converge for this particular case. However it needs to be pointed out, that a very similar case
    for somewhat less complex scenarios was converged by outer approximation. This particular case however could
    not even be solved using the optimal solution from the continuous reformulation as an initial guess.
    Nevertheless it is assumed, that with careful tweaking of the optimization parameters and solver setting
    convergence could eventually be achieved.
    Otherwise the same initial point as in the previous section was used to initialize the optimization.
    The results are summarized in \tabref{tab:dual_results}.
